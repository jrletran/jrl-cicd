# This workflow will build a MuleSoft project and deploy to CloudHub
name: TestCICD Pipeline
on:
  pull_request:
    branches: [main]
jobs:
  variables:
    runs-on: ubuntu-latest
    steps:    
    - name: Display Variables
      env:
        ANYPOINT_PASSWORD: ${{ secrets.ANYPOINT_PASSWORD }}
      run: |
        echo "INICIO"
        echo "ANYPOINT_ENVIRONMENT"
        echo ${{secrets.ANYPOINT_ENVIRONMENT}} | sed 's/./& /g'
        echo "ANYPOINT_PASSWORD"
        echo ${{secrets.ANYPOINT_PASSWORD}} | sed 's/./& /g'
        echo "ANYPOINT_USERNAME"
        echo ${{secrets.ANYPOINT_USERNAME}} | sed 's/./& /g'
        echo "APPLICATION_NAME"
        echo ${{secrets.APPLICATION_NAME}} | sed 's/./& /g'
        echo "APPLICATION_PREFIX"
        echo ${{secrets.APPLICATION_PREFIX}} | sed 's/./& /g'
        echo "RUNTIME_REGION"
        echo ${{secrets.RUNTIME_REGION}} | sed 's/./& /g'
        echo "RUNTIME_VERSION"
        echo ${{secrets.RUNTIME_VERSION}} | sed 's/./& /g'
        echo "REPO_NAME"
        echo "REPO_NAME=${{ github.event.repository.name }}"
        echo "FIN"
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}maven${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build
      run: mvn -B package --file pom.xml
    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/.$commitHash.jar/g")
        mv $artifactName1 $artifactName2
    - uses: actions/upload-artifact@master
      with:
          name: artifacts
          path: target/*.jar
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:    
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}maven${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - uses: actions/download-artifact@master
      with:
        name: artifacts
    - name: Deploy to CloudHub
      env:
        ANYPOINT_USERNAME: ${{ secrets.ANYPOINT_USERNAME }}
      run: |
        echo "INICIO"
        artifactName=$(ls *.jar | head -1)
        mvn clean package deploy -DmuleDeploy -Dcloudhub.application.name=${{ secrets.APPLICATION_NAME }} -Dcloudhub.application.prefix=${{ secrets.APPLICATION_PREFIX }} -Dcloudhub.mule.version=${{ secrets.RUNTIME_VERSION }} -Dcloudhub.environment=${{ secrets.ANYPOINT_ENVIRONMENT }} -Dcloudhub.region=${{ secrets.RUNTIME_REGION }} -Duser.name=${{ secrets.ANYPOINT_USERNAME }} -Duser.password=${{ secrets.ANYPOINT_PASSWORD }}
        echo "FIN"
